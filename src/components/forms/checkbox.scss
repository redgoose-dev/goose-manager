@use '../../assets/scss/mixins';

.checkbox {
  position: relative;
  display: block;
  font-size: 0;
  i {
    display: block;
    position: relative;
    width: var(--checkbox-size, 20px);
    height: var(--checkbox-size, 20px);
    box-sizing: border-box;
    border-radius: 3px;
    background-color: var(--checkbox-bg, rgb(240 240 240));
    box-shadow: var(--checkbox-shadow, inset 0 2px 5px rgb(0 0 0 / 15%), inset 0 0 0 1px rgb(0 0 0 / 20%));
    transition: box-shadow 150ms ease-out;
    &:after {
      content: '';
      position: absolute;
      display: block;
      left: 50%;
      top: 50%;
      transform-origin: 50% 50%;
      transform: translate(-50%, -50%) scale(0);
      transition: transform 50ms ease-out;
      background: var(--checkbox-unit-color, var(--color-key));
      box-shadow: inset 0 2px 6px rgb(var(--color-sub-rgb) / 75%);
      width: var(--checkbox-point-size, 12px);
      height: var(--checkbox-point-size, 12px);
      border-radius: 2px;
    }
  }
  input {
    display: block;
    margin: 0;
    padding: 0;
    position: absolute;
    z-index: 2;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
    &:focus:not([disabled]) + i {
      --checkbox-shadow: inset 0 -2px 5px rgb(0 0 0 / 10%), inset 0 0 0 1px var(--color-key), 0 0 0 3px rgb(var(--color-key-rgb) / 20%);
    }
    &:checked {
      & + i:after {
        transform: translate(-50%,-50%) scale(1);
        transition: transform 180ms cubic-bezier(.35, 1.9, .68, 1.05);
      }
    }
    &:disabled {
      cursor: not-allowed;
      & + i {
        opacity: .5;
      }
    }
  }

  // size
  &--size {
    &-small {
      --checkbox-size: 16px;
      --checkbox-point-size: 10px;
    }
  }

  // dark mode
  @include mixins.dark-mode() {
    i {
      --checkbox-bg: rgb(57 57 57);
      --checkbox-shadow: inset 0 2px 5px rgb(0 0 0 / 0), inset 0 0 0 1px rgb(102 102 102 / 100%);
    }
    input {
      &:focus:not([disabled]) + i {
        --checkbox-shadow: inset 0 -2px 5px rgb(0 0 0 / 0), inset 0 0 0 1px var(--color-key), 0 0 0 3px rgb(var(--color-key-rgb) / 20%);
      }
    }
  }
}
