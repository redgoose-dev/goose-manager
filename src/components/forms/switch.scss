@use '../../assets/scss/mixins';

.switch {
  display: block;
  position: relative;
  width: var(--switch-width, 54px);
  height: var(--switch-height, 28px);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: calc(var(--switch-height, 28px) * .5);
  -webkit-tap-highlight-color: transparent;
  input {
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    pointer-events: none;
    appearance: none;
    background-color: var(--switch-bg, rgb(245 245 245));
    border-radius: calc(var(--switch-height, 28px) * .5);
    box-shadow: var(--switch-shadow, inset 0 2px 5px rgb(0 0 0 / 15%), inset 0 0 0 1px rgb(0 0 0 / 20%), 0 0 0 3px rgb(0 0 0 / 0));
    transition: box-shadow 200ms ease-out;
    outline: none;
    border: none;
  }
  i {
    --unit-size: calc(var(--switch-height, 28px) - (var(--switch-padding, 5px) * 2));
    display: block;
    position: absolute;
    left: var(--switch-padding, 5px);
    top: var(--switch-padding, 5px);
    width: calc(var(--switch-height, 28px) - (var(--switch-padding, 5px) * 2));
    height: calc(var(--switch-height, 28px) - calc(var(--switch-padding, 5px) * 2));
    background-color: var(--switch-color, var(--color-weak));
    border-radius: calc(var(--switch-height, 28px) * .5);
    transition: width 120ms ease-out, background-color 100ms ease-out;
    pointer-events: none;
    box-shadow: 0 0 3px 0 rgba(0,0,0,.15);
  }
  &:not(.switch--disabled, .switch--readonly):active {
    i {
      width: calc(var(--switch-height, 28px) - (var(--switch-padding, 5px) * 2) + var(--switch-active-offset, 8px));
    }
  }
  &:focus-within {
    input {
      --switch-shadow: inset 0 -2px 5px rgb(0 0 0 / 10%), inset 0 0 0 1px rgb(0 0 0 / 40%), 0 0 0 3px rgb(0 0 0 / 15%);
    }
  }
  input:checked + i {
    left: unset;
    right: var(--switch-padding, 5px);
    --switch-color: var(--color-key);
  }
  &--readonly {
    --switch-bg: rgb(230 230 230);
    cursor: default;
  }
  &--disabled {
    opacity: .5;
    cursor: not-allowed;
  }

  //@include mixins.dark-mode() {
  //  i {
  //    background-color: var(--color-fill);
  //  }
  //}
}
