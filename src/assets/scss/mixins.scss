// === Screen

// responsive
@mixin responsive($range)
{
  @if ($range == tablet) { @media (min-width: 768px) { @content; } }
  @else if ($range == desktop) { @media (min-width: 1024px) { @content; } }
  @else if ($range == desktop-large) { @media (min-width: 1440px) { @content; } }
}

// for retina
@mixin retina()
{
  @media (-webkit-min-device-pixel-ratio: 2) {
    @content;
  }
}

// dark mode
@mixin dark-mode($root: false)
{
  @if ($root)
  {
    &[data-theme=dark] {
      @content;
    }
    &[data-theme=system],
    &:not([data-theme]),
    &[data-theme=""] {
      @media (prefers-color-scheme: dark) {
        @content;
      }
    }
  }
  @else
  {
    html[data-theme=dark] & {
      @content;
    }
    @media (prefers-color-scheme: dark) {
      html[data-theme=system] &,
      html:not([data-theme]) &,
      html[data-theme=""] & {
        @content;
      }
    }
  }
}


// === Button

// button touch options
@mixin button-touch-options($opacity: false)
{
  outline: none;
  user-select: none;
  cursor: pointer;
  -webkit-tap-highlight-color: rgb(0 0 0 / 0%);
  @if ($opacity)
  {
    &:not(:disabled):active {
      opacity: .6;
    }
  }
}

// hover
@mixin hover()
{
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}


// === Typography

// single line text
@mixin text-single-line()
{
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


// === Etc

// background blur
@mixin background-blur($size)
{
  @supports (backdrop-filter: blur($size)) {
    backdrop-filter: blur($size);
    @content;
  }
}
