@use '../../scss/mixins';

.content {
  display: grid;
  grid-template-rows: auto 1fr;
  height: 100%;
  overflow: hidden;
  box-sizing: border-box;
}

.content-loading {
  box-sizing: border-box;
  .loading {
    --loading-height: 100%;
    --loading-min-height: 0;
    --loading-max-height: unset;
  }
}

.content-items {
  overflow: auto;
  container-type: inline-size;
  padding: 20px;
  outline: none;
  @include mixins.custom-scrollbar();
  &:after {
    content: '';
    display: block;
    height: 100px;
  }
}

.files {
  display: grid;
  grid-template-columns: repeat(var(--column, 4), 1fr);
  gap: var(--gap, 8px);
  margin: 0;
  padding: 0;
  list-style: none;
  @container (min-width: #{mixins.$responsive-desktop}) {
    --column: 5;
    --gap: 12px
  }
  > li {
    min-width: 0;
  }
}

.empty {
  --empty-height: 100%;
  --empty-min-height: unset;
  --empty-max-height: unset;
}

.overlay-dropzone {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 10001;
  display: grid;
  place-content: center;
  height: 100dvh;
  box-sizing: border-box;
  pointer-events: none;
  background: mixins.mix-alpha(var(--color-sub), 80%);
  align-content: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 120ms ease-out;
  @include mixins.background-blur(24px);
  &.active {
    opacity: 1;
  }
  :is(span) {
    display: block;
    font-size: 52px;
    font-weight: 700;
    font-family: var(--font-eng);
    color: var(--color-edge);
    text-transform: uppercase;
    line-height: 1.1;
    letter-spacing: -.5px;
    user-select: none;
  }
}
